{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osama\\\\monsters_finder\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.SeachMethod = event => {\n      const _onChangeValue = event.target.value.toLocaleLowerCase();\n      this.setState(() => {\n        return {\n          _onChangeValue\n        };\n      });\n    };\n    this.state = {\n      monsters: [],\n      _onChangeValue: ''\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(event => event.json()).then(req => this.setState(() => {\n      return {\n        monsters: req\n      };\n    }, () => {\n      console.log(this.state);\n    }));\n  }\n  render() {\n    const filteredMonsters = this.state.monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase.includes(this.state._onChangeValue);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchBar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"SearchInput\",\n          placeholder: \"Monster Name \",\n          onChange: this.SeachMethod\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filteredMonsters.map(monster => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: monster.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)\n          }, monster.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["logo","Component","jsxDEV","_jsxDEV","App","constructor","SeachMethod","event","_onChangeValue","target","value","toLocaleLowerCase","setState","state","monsters","componentDidMount","fetch","then","json","req","console","log","render","filteredMonsters","filter","monster","name","includes","className","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","id"],"sources":["C:/Users/osama/monsters_finder/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport { Component } from 'react';\nimport './App.css';\n\nclass App extends Component{\n  constructor ()\n  {\n    super();\n    \n    this.state = {\n      monsters:[],\n      _onChangeValue:'',\n\n    }\n  }\n\n\ncomponentDidMount()\n{ \n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then((event)=> event.json())\n    .then((req)=> this.setState(\n      ()=>\n      {\n        return {monsters:req}\n      }\n      ,()=>\n      {\n        console.log(this.state)\n      }));\n}\n\nSeachMethod = (event)=>\n{\n  const _onChangeValue = event.target.value.toLocaleLowerCase();\n  this.setState(()=>\n  {\n    return{_onChangeValue};\n  });\n};\n\n  render()\n  {\n    const filteredMonsters = this.state.monsters.filter((monster)=> \n    {\n      return monster.name.toLocaleLowerCase.includes(this.state._onChangeValue);\n    });\n\n    \n\n    return (\n      <div className=\"App\">\n\n        <div className='SearchBar'>\n          <input className='SearchInput' placeholder='Monster Name ' onChange={this.SeachMethod}/>\n        </div>\n        \n        <div>\n            {\n              filteredMonsters.map((monster)=>{\n              return (\n                <div key={monster.id}>\n                  \n                  <h2>\n                    {monster.name}\n                  </h2>\n                </div>\n              );\n            }\n              )\n            }\n        </div>\n      </div>\n    );\n  };\n  \n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,SAASH,SAAS;EACzBI,WAAWA,CAAA,EACX;IACE,KAAK,CAAC,CAAC;IAAC,KAyBZC,WAAW,GAAIC,KAAK,IACpB;MACE,MAAMC,cAAc,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,iBAAiB,CAAC,CAAC;MAC7D,IAAI,CAACC,QAAQ,CAAC,MACd;QACE,OAAM;UAACJ;QAAc,CAAC;MACxB,CAAC,CAAC;IACJ,CAAC;IA9BG,IAAI,CAACK,KAAK,GAAG;MACXC,QAAQ,EAAC,EAAE;MACXN,cAAc,EAAC;IAEjB,CAAC;EACH;EAGFO,iBAAiBA,CAAA,EACjB;IACEC,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEV,KAAK,IAAIA,KAAK,CAACW,IAAI,CAAC,CAAC,CAAC,CAC5BD,IAAI,CAAEE,GAAG,IAAI,IAAI,CAACP,QAAQ,CACzB,MACA;MACE,OAAO;QAACE,QAAQ,EAACK;MAAG,CAAC;IACvB,CAAC,EACA,MACD;MACEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,KAAK,CAAC;IACzB,CAAC,CAAC,CAAC;EACT;EAWES,MAAMA,CAAA,EACN;IACE,MAAMC,gBAAgB,GAAG,IAAI,CAACV,KAAK,CAACC,QAAQ,CAACU,MAAM,CAAEC,OAAO,IAC5D;MACE,OAAOA,OAAO,CAACC,IAAI,CAACf,iBAAiB,CAACgB,QAAQ,CAAC,IAAI,CAACd,KAAK,CAACL,cAAc,CAAC;IAC3E,CAAC,CAAC;IAIF,oBACEL,OAAA;MAAKyB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAElB1B,OAAA;QAAKyB,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxB1B,OAAA;UAAOyB,SAAS,EAAC,aAAa;UAACE,WAAW,EAAC,eAAe;UAACC,QAAQ,EAAE,IAAI,CAACzB;QAAY;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC,eAENhC,OAAA;QAAA0B,QAAA,EAEMN,gBAAgB,CAACa,GAAG,CAAEX,OAAO,IAAG;UAChC,oBACEtB,OAAA;YAAA0B,QAAA,eAEE1B,OAAA;cAAA0B,QAAA,EACGJ,OAAO,CAACC;YAAI;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX;UAAC,GAJGV,OAAO,CAACY,EAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKf,CAAC;QAEV,CACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AAEF;AAEA,eAAe/B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}